Given two strings, find the longest common substring.
Return the length of it.

Example
Given A="ABCD", B="CBCE", return 2.
Note
The characters in substring should occur continuously in original string.
This is different with subsequence.
============
public class Solution {
    /**
     * @param A, B: Two string.
     * @return: the length of the longest common substring.
     */
    public int longestCommonSubstring(String A, String B) {
        if (A == null || B == null) return 0;
        
        int alen = A.length();
        int blen = B.length();
        int maxlen = 0;
        
        for (int i = 0; i < alen; i++) {
            for (int j =0; j < blen; j++) {
                int len = 0;
                while (i+len < alen && j+len < blen && A.charAt(i+len) == B.charAt(j+len)) {
                    len++;
                    if (len > maxlen) {
                        maxlen = len;
                    }
                }
            }
        }
        return maxlen;
    }
}

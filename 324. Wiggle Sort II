324. Wiggle Sort II
Total Accepted: 4624 Total Submissions: 22183 Difficulty: Medium
Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example:
(1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. 
(2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].

Note:
You may assume all input has valid answer.

Follow Up:
Can you do it in O(n) time and/or in-place with O(1) extra space?
=========
public class Solution {
    public void wiggleSort(int[] nums) {
    // sort the array first.
        Arrays.sort(nums);
        int[] sortarr = new int[nums.length];
        for (int i=0; i<nums.length; i++) {
            sortarr[i] = nums[i];
        }
        // put the elems from last at even position.
        int index = nums.length-1;
        for (int i= 1; i<nums.length; i+=2){
            nums[i] = sortarr[index];
            index--;
        }
        // put the elems from last at odd position.
        for (int i=0; i<nums.length; i+=2){
            nums[i] = sortarr[index];
            index--;
        }
    }
}

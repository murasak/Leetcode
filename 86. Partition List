86. Partition List
Total Accepted: 58433 Total Submissions: 203026 Difficulty: Medium
Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.
=============
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
    // split into 2 lists: left(val<x) & right(val>=x).
    
        ListNode dummyLeft = new ListNode(0);
        ListNode left = dummyLeft;
        ListNode dummyRight = new ListNode(0);
        ListNode right = dummyRight;
        
        ListNode runner = head;
        while (runner!=null) {
            if (runner.val < x) {
                left.next = runner;
                left = left.next;
            } else {
                right.next = runner;
                right = right.next;
            }
            runner = runner.next;
        }
        
        right.next = null;
        left.next = dummyRight.next;
        
        return dummyLeft.next;
    }
}

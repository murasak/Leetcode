110. Balanced Binary Tree 
Total Accepted: 94848 Total Submissions: 284592 Difficulty: Easy
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree 
in which the depth of the two subtrees of every node never differ by more than 1.
=================
test set:
[1,2,2,3,3,3,3,4,4,4,4,4,4,null,null,5,5] expected: true;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
        return getHeight(root) != -1;
    }
    
    public int getHeight(TreeNode root) {
        if (root==null) return 0;
        int left = getHeight(root.left);
        int right = getHeight(root.right);
        
        // height-balanced : two subtrees of every node hight-diff <=1
        if (left==-1 || right==-1 || Math.abs(left-right)>1) return -1;  
        
        return 1+Math.max(left,right);
    }
}

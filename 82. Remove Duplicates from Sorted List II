82. Remove Duplicates from Sorted List II
Total Accepted: 64450 Total Submissions: 245180 Difficulty: Medium
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.
===========
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode dummy = new ListNode(0);
        ListNode pre = dummy;
        
        ListNode cur = head;
        while (cur!=null && cur.next!=null) {
            if (cur.val != cur.next.val) {
                pre.next = cur;
                pre = cur;
                cur = cur.next;
            } else {
                int tmp = cur.val;
                while (cur!=null && cur.val==tmp) {
                    cur = cur.next;
                }
            }
        }
        pre.next = cur;
        
        return dummy.next;
    }
}

16. 3Sum Closest
Total Accepted: 69119 Total Submissions: 242136 Difficulty: Medium
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
=========

// inherited from 3 sum.

public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        if (nums.length < 3 || nums == null) return Integer.MAX_VALUE;
        
        Arrays.sort(nums);
        
        int closest = Integer.MAX_VALUE/2;
        for (int i=0; i < nums.length-2; i++) {
            int left=i+1;
            int right = nums.length-1;
            while (left < right){
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == target) return sum;
                else if ( target > sum) {
                    left++;
                } else right--;
                
                closest = Math.abs(sum-target) < Math.abs(closest-target)? sum: closest;
                    
                }
            }
        return closest;
        
        
    }
}

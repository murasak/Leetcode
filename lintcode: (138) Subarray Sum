Given an integer array, find a subarray where the sum of numbers is zero.
Your code should return the index of the first number and the index of the last number.

Example
Given [-3, 1, 2, -3, 4], return [0, 2] or [1, 3].

Note
There is at least one subarray that it's sum equals to zero.
===========
public class Solution {
    /**
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number 
     *          and the index of the last number
     */
    public ArrayList<Integer> subarraySum(int[] nums) {
        
        ArrayList<Integer> res = new ArrayList<Integer>();
        Map<Integer,Integer> mp = new HashMap<Integer, Integer>();
        int sum = 0;
        mp.put(0,0);
        for (int i=0; i<nums.length; i++) {
            sum += nums[i];
            if (mp.containsKey(sum)){
                res.add(mp.get(sum));
                res.add(i);
                break;
            } else {
                mp.put(sum, i+1);
            }
        }
        return res;
    }
}
